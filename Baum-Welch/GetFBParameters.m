function [ newTransDist, newObsDist ] = GetFBParameters( forward, backward, PO, transStates, transDist, obs, obsStates, obsDist )
%GetFBParameters Returns parameters for HMM using Forward-Backward estimates

%Inputs:
%   forward - the forward matrix generated with ForwardBackward.m

%   backward - the backward matrix generated with ForwardBackward.m

%   PO - the Probability of the Observation sequence, generated by
%   ForwardBackward.m

%   obs - observation vector for the observed non-hidden states of the HMM

%   obsStates - vector of non-hidden state names

%   obsDist - vector of non-hidden state distributions among the hidden
%   states. Vector has rows of hidden states, and columns assigned to the
%   non-hidden states

%   transStates - vector of the hidden states in the HMM
%   transDist - distribution matrix of the hidden states' state transitions

%Outputs:
%newTransState - the new estimates of the hidden states' state transitions
%newObsState - the new estimate of the non-hidden state probabilities


%Get new transition probabilities
for s=1:numel(transStates)
        for w=1:numel(transStates)
            E =0;G = 0;
            for t=1:(numel(obs)-1)
                c = find(strcmp(obsStates, obs{t+1})); %Find index of current obs in obs table
                 %Sum up over t=1:T the probability of starting in state s at time t,
                % and transitioning to state w at time t+1:
                E = ((forward(s,t)* transDist(w,s)*obsDist(w,c)*backward(w,t+1))/PO) + E; 
               
                %Sum up over t=1:T the probability of being in state s at time t, normalized by
                %PO
                G = ((forward(s,t) *backward(s,t))/PO) + G;
            end
            %Add to table at (s,w)
            newTransDist(s,w) = E/G;
        end
end

%Get new estimates for observation probabilities:
for s=1:numel(transStates)
        for i=1:numel(obsStates)
            G=0;g=0;
            for t=1:(numel(obs)-1)
                %Sum up over t=1:T the probability of being in state s at time t, normalized by
                %PO, but only if the observation in t matches i
               if (strcmp(obsStates(i),obs(t)))
                   g = g + ((forward(s,t) *backward(s,t))/PO);
               end
               %Sum up t=1:T the probability of being in state s at time t, normalized by
                %PO. Used to put g in probability form.
               G = ((forward(s,t) *backward(s,t))/PO) + G;
            end
            %Add to table for state s, observation category i
            newObsDist(s,i) = g/G;
        end
end



end

